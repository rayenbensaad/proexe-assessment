{"version":3,"sources":["redux/actions/users/type.js","redux/reducers/users/index.js","redux/actions/message/type.js","redux/reducers/message/index.js","redux/actions/modal/type.js","redux/reducers/modal/index.js","redux/reducers/rootReducer.js","store.js","logo.svg","services/http-common.js","services/users.js","redux/actions/modal/index.js","components/ModalDelete.js","redux/actions/users/index.js","pages/Home.js","helpers/history.js","pages/AddUser.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE_USER_SUCCESS","CREATE_USER_FAIL","LIST_USER_SUCCESS","LIST_USER_FAIL","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","initialState","users","user","userReducer","state","action","type","payload","console","log","filter","id","parseInt","map","userID","data","SET_MESSAGE","CLEAR_MESSAGE","messageReducer","message","OPEN_MODAL","CLOSE_MODAL","isOpen","modalReducer","rootReducer","combineReducers","modal","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","axios","create","baseURL","process","headers","withCredentials","http","get","then","response","closeModal","ModalDelete","props","useSelector","dispatch","useDispatch","useEffect","Modal","centered","ModalHeader","toggle","ModalBody","ModalFooter","Button","color","onClick","Home","useState","setId","redirectToEditUser","history","push","columns","useMemo","Header","accessor","Cell","value","city","size","row","original","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Card","style","overflowX","CardBody","CardTitle","tag","className","CardText","fontSize","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","createBrowserHistory","AddUser","window","location","search","split","setUser","submitted","setSubmitted","validateEmail","emailAdress","match","handleInputChange","event","target","name","email","htmlFor","required","onChange","length","updateUser","createUser","role","App","UserService","Promise","resolve","error","toString","reject","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"yOAAaA,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAoB,oBACpBC,EAAiB,iBAKjBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAAsB,sBACtBC,EAAmB,mBCF1BC,EAAe,CACnBC,MAAO,GACPC,KAAM,MA2DOC,EAxDK,WAAmC,IAAD,EAAjCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC5CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKZ,EACH,OAAO,2BACFU,GADL,IAEEH,MAAOM,IAEX,KAAKZ,EACH,OAAO,eACFS,GAEP,KAAKZ,EAEH,OADA,EAAAgB,SAAQC,IAAR,SAAYF,GAAZ,mBAAwBH,EAAMH,SACvB,2BACFG,GADL,IAEEH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,CAAmBM,MAE5B,KAAKd,EACH,OAAO,eACFW,GAEP,KAAKN,EACH,OAAO,2BACFM,GADL,IAEEH,MAAOG,EAAMH,MAAMS,QAAO,qBAAGC,KAAgBC,SAASL,QAE1D,KAAKR,EACH,OAAO,eACFK,GAEP,KAAKR,EAEH,OADAY,QAAQC,IAAIF,EAAS,yBACd,2BACFH,GADL,IAEEH,MAAOG,EAAMH,MAAMY,KAAI,SAACX,GAEtB,OADAM,QAAQC,IAAIP,EAAKS,KAAOC,SAASL,EAAQO,QAAS,gBAC9CZ,EAAKS,KAAOC,SAASL,EAAQO,QACxB,2BACFZ,GACAK,EAAQQ,MAGNb,OAIf,KAAKL,EACH,OAAO,eACFO,GAEP,QACE,OAAOA,ICpEAY,EAAc,cACdC,EAAgB,gBCCvBjB,EAAe,GAoBNkB,EAlBQ,WAAoC,IAAnCd,EAAkC,uDAA1BJ,EAAcK,EAAY,uCAC9CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKU,EACH,OAAO,2BACFZ,GADL,IAEEe,QAASZ,IAEb,KAAKU,EACH,OAAO,2BACFb,GADL,IAEEe,QAAS,KAEb,QACE,OAAOf,IClBFgB,EAAa,aACbC,EAAc,cCCrBrB,EAAe,CACnBsB,QAAQ,GAqBKC,EAlBM,WAAoC,IAAnCnB,EAAkC,uDAA1BJ,EAAcK,EAAY,uCAC5CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKc,EAKL,KAAKC,EACH,OAAO,2BACFjB,GADL,IAEEkB,OAAQf,IAEZ,QACE,OAAOH,ICJAoB,EAPKC,0BAAgB,CAClCvB,OACAiB,UACAO,UCPIC,EAAa,CAACC,KAEdC,EAAQC,sBACZN,EACAO,8BAAoBC,kBAAe,WAAf,EAAmBL,K,GCT1B,I,8CCGAM,E,OAAAA,EAAMC,OAAO,CAE1BC,QAJeC,sEAKfC,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,ICsEJ,EA5EF,WACX,OAAOC,EACJC,IAAI,QACJC,MAAK,SAACC,GAEL,OADAlC,QAAQC,IAAIiC,GACLA,EAAS3B,SCDT4B,EAAa,iBAAO,CAC/BrC,KAAMe,EACNd,SAAS,I,sFC4CIqC,EAvCK,SAACC,GACDC,aAAY,SAAC1C,GAAD,OAAWA,EAAMF,QAAvCD,MAAR,IACQqB,EAAWwB,aAAY,SAAC1C,GAAD,OAAWA,EAAMsB,SAAxCJ,OACFyB,EAAWC,cASjB,OAPAC,qBAAU,SAACJ,MAER,IAMC,eAACK,EAAA,EAAD,CACAC,UAAQ,EACV7B,OAAQA,EAFN,UAIF,cAAC8B,EAAA,EAAD,CAAaC,OAAQ,aAArB,oBAGA,cAACC,EAAA,EAAD,uDAGA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACNC,QAAS,WCiBS,IAAC/C,EDjBJoC,GCiBIpC,EDjBgBkC,EAAMlC,GCiBf,SAACoC,GAC9BpC,IACDH,QAAQC,IAAIE,EAAI,UAChBoC,EAAS,CACPzC,KAAMR,EACNS,QAASI,IAGXoC,EAAS,CACPzC,KAAMU,EACNT,QAAS,gCD3BuCwC,EAASJ,MAFzD,iBAMC,IACD,cAACa,EAAA,EAAD,CAAQE,QAAS,WAAMX,EAASJ,MAAhC,2BE2GSgB,EApIF,SAACd,GACZ,IAAQ5C,EAAU6C,aAAY,SAAC1C,GAAD,OAAWA,EAAMF,QAAvCD,MACF8C,EAAWC,cACjB,EAA4BY,oBAAS,GAArC,mBACA,GADA,UACoBA,mBAAS,OAA7B,mBAAOjD,EAAP,KAAWkD,EAAX,KAEAZ,qBAAU,SAACJ,MAER,IAEH,IAGMiB,EAAqB,SAACnD,GAC1BkC,EAAMkB,QAAQC,KAAd,uBAAmCrD,KAE/BsD,EAAUC,mBACd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,YAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,OACRC,SAAU,UACVC,KAAM,SAACxB,GAAW,IAAD,EACf,OAAO,+CAAQA,EAAMyB,aAAd,aAAQ,EAAaC,KAArB,SAGX,CACEJ,OAAQ,OACRE,KAAM,SAACxB,GACL,OACI,cAACW,EAAA,EAAD,CAAQgB,KAAK,KAAKf,MAAM,UAAUC,QAAS,kBAAII,EAAmBjB,EAAM4B,IAAIC,SAAS/D,KAArF,oBAIR,CACEwD,OAAQ,SACRE,KAAM,SAACxB,GACL,OACI,cAACW,EAAA,EAAD,CAAQgB,KAAK,KAAKf,MAAM,SAASC,QAAS,WAAMX,EHvE9B,CAC9BzC,KAAMc,EACNb,SAAS,IGqE0EsD,EAAMhB,EAAM4B,IAAIC,SAAS/D,KAAhG,yBAKV,IAGF,EACEgE,mBAAS,CACPV,UACAlD,KAAMd,GAER2E,aALMC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,kBAAmBC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,KAAMC,EAA9D,EAA8DA,WAQ9D,OACE,gCACE,4CACA,cAACC,EAAA,EAAD,CAAMzB,MAAM,QAAQ0B,MAAO,CAACC,UAAU,QAAtC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,SACE,sBAAKC,UAAU,iCAAf,UACE,6CACA,cAAChC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAnEV,WACxBb,EAAMkB,QAAQC,KAAK,cAkET,0BAGJ,cAACyB,EAAA,EAAD,UACE,qBAAKD,UAAU,iBAAf,SACE,gDACEA,UAAU,qCACVL,MAAO,CAACO,SAAS,YACbb,KAHN,cAKE,gCACGE,EAAalE,KAAI,SAAC8E,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYtD,QAAQxB,KAAI,SAACgF,GAAD,OACvB,+CAAQA,EAAOC,eAAeD,EAAOE,yBAArC,cACGF,EAAOG,OAAO,UACf,iCACGxF,QAAQC,IAAIoF,GACZA,EAAOI,SACJJ,EAAOK,aACL,SACA,SACF,qBAOhB,iDAAWpB,KAAX,aACGE,EAAKnE,KAAI,SAAC4D,EAAK0B,GAEd,OADAlB,EAAWR,GAET,8CAAQA,EAAI2B,eAAZ,aACG3B,EAAI4B,MAAMxF,KAAI,SAACyF,GACd,OACE,8CAAQA,EAAKC,gBAAb,aACGD,EAAKN,OAAO,oCAarC,cAAC,EAAD,CAAarF,GAAIA,Q,QCjJVoD,GAAUyC,c,6BCkJRC,GA9IC,SAAC5D,GACb,IAAME,EAAWC,cACT/C,EAAU6C,aAAY,SAAC1C,GAAD,OAAWA,EAAMF,QAAvCD,MAEJa,EAAS4F,OAAOC,SAASC,OAAOC,MAAM,KAAK,GAQ/C,EAAwBjD,mBAAS3D,EAAMS,QAAO,qBAAGC,KAAgBC,SAASE,MAAS,IAAnF,mBAAOZ,EAAP,KAAa4G,EAAb,KACA,EAAkClD,oBAAS,GAA3C,mBAAOmD,EAAP,KAAkBC,EAAlB,KACQ7F,EAAY2B,aAAY,SAAA1C,GAAK,OAAIA,EAAMe,WAAvCA,QAIR8B,qBAAU,WACN6D,EAAQ7G,EAAMS,QAAO,qBAAGC,KAAgBC,SAASE,MAAS,IAC1DN,QAAQC,IAAIR,EAAMS,QAAO,qBAAGC,KAAgBC,SAASE,SAKpD,IAGL,IAAMmG,EAAgB,SAACC,GACnB,GAAGA,EAAY,CAEf,QAASA,EAAYC,MADA,mDAKnBC,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMjD,EAAd,EAAcA,MACdwC,EAAQ,2BAAK5G,GAAN,mBAAaqH,EAAOjD,MAiC/B,OACI,gCACA,4CADA,OAECpE,QAFD,IAECA,OAFD,EAECA,EAAMsH,MACP,cAACtC,EAAA,EAAD,CAAMzB,MAAM,QAAZ,SACE,eAAC4B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,kBAGA,cAACE,EAAA,EAAD,UACJ,qBAAKD,UAAU,cAAf,SAEQ,gCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,kBACA,uBACInH,KAAK,OACLkF,UAAU,eACV7E,GAAG,QACH+G,UAAQ,EACRpD,MAAK,OAAEpE,QAAF,IAAEA,OAAF,EAAEA,EAAMqH,KACbI,SAAUP,EACVG,KAAK,UAEJ,OAAJrH,QAAI,IAAJA,OAAA,EAAAA,EAAMqH,KAAKK,QAAS,GAA2B,KAAlB,OAAJ1H,QAAI,IAAJA,OAAA,EAAAA,EAAMqH,KAAKK,QAChC,qBAAKpC,UAAU,mBAAf,8DAA4F,KAC1E,KAAlB,OAAJtF,QAAI,IAAJA,OAAA,EAAAA,EAAMqH,KAAKK,SAAgBb,EACvB,qBAAKvB,UAAU,qBAAf,8BAA8D,QAGvE,sBAAKA,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,mBACA,uBACInH,KAAK,QACLkF,UAAU,eACV7E,GAAG,QACH+G,UAAQ,EACRpD,MAAK,OAAEpE,QAAF,IAAEA,OAAF,EAAEA,EAAMsH,MACbG,SAAUP,EACVG,KAAK,UAEJ,OAAJrH,QAAI,IAAJA,KAAMsH,QAAUP,EAAa,OAAC/G,QAAD,IAACA,OAAD,EAACA,EAAMsH,OAChC,qBAAKhC,UAAU,qBAAf,0CAA0E,KACvD,KAAnB,OAAJtF,QAAI,IAAJA,OAAA,EAAAA,EAAMsH,MAAMI,SAAgBb,EACxB,qBAAKvB,UAAU,qBAAf,+BAA+D,QAGvE1E,EACD,wBAAQ4C,QA9EP,WACblD,QAAQC,IAAIP,GACZ,IAAMa,EAAO,CACTJ,IAAS,OAALV,QAAK,IAALA,OAAA,EAAAA,EAAO2H,QAAQ,EACnBL,KAAMrH,EAAKqH,KACXC,MAAOtH,EAAKsH,OAEhBR,GAAa,GACVC,EAAc/G,EAAKsH,QAAyB,KAAftH,EAAKsH,OAA8B,KAAdtH,EAAKqH,OAEtDxE,EHgBc,SAAChC,EAAMD,GAAP,OAAkB,SAACiC,GAC3CvC,QAAQC,IAAIM,EAAMD,GACfC,IACDgC,EAAS,CACPzC,KAAMV,EACNW,QAAS,CAACQ,OAAMD,YAElBiC,EAAS,CACPzC,KAAMU,EACNT,QAAS,OGzBMsH,CAAW9G,EAAMD,IAC1B+B,EAAMkB,QAAQC,KAAK,WAmEgBwB,UAAU,kBAArC,kBAIJ,wBAAQ9B,QAnED,WACflD,QAAQC,IAAIP,GACZ,IAAMa,EAAO,CACTJ,IAAS,OAALV,QAAK,IAALA,OAAA,EAAAA,EAAO2H,QAAQ,EACnBL,KAAMrH,EAAKqH,KACXC,MAAOtH,EAAKsH,OAEhBR,GAAa,GACVC,EAAc/G,EAAKsH,QAAyB,KAAftH,EAAKsH,OAA8B,KAAdtH,EAAKqH,OAEtDxE,EH3Bc,SAAChC,GAAD,OAAU,SAACgC,GAChChC,IACDgC,EAAS,CACPzC,KAAMd,EACNe,QAASQ,IAEXgC,EAAS,CACPzC,KAAMU,EACNT,QAAS,OGmBMuH,CAAW/G,IACpB8B,EAAMkB,QAAQC,KAAK,WAwDcwB,UAAU,kBAAvC,oBAIKrE,GACG,qBAAKqE,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAsBuC,KAAK,QAA1C,SACK5G,sBClFlB6G,OAnCf,WAEE,IAAMjF,EAAWC,cAMjB,OALAC,qBAAU,SAACJ,GACTE,GJjB2B,SAACA,GAC9B,OAAOkF,IAAmBxF,MACxB,SAACC,GAYC,OAXAlC,QAAQC,IAAIiC,EAAU,OACtBK,EAAS,CACPzC,KAAMZ,EACNa,QAASmC,IAGXK,EAAS,CACPzC,KAAMU,EACNT,QAASmC,EAASvB,UAGb+G,QAAQC,aAEjB,SAACC,GACC,IAAMjH,EACHiH,EAAM1F,UACL0F,EAAM1F,SAAS3B,MACfqH,EAAM1F,SAAS3B,KAAKI,SACtBiH,EAAMjH,SACNiH,EAAMC,WAWR,OATAtF,EAAS,CACPzC,KAAMX,IAGRoD,EAAS,CACPzC,KAAMU,EACNT,QAASY,IAGJ+G,QAAQI,iBIfhB,IAID,cAAC,IAAD,CAAQvE,QAASA,GAAjB,SACE,eAAC,WAAD,WACE,sBAAKyB,UAAU,2CAAf,UACE,cAAC,IAAD,CAAM+C,GAAI,IAAK/C,UAAU,eAAzB,oBAIA,cAAC,IAAD,CAAM+C,GAAI,QAAS/C,UAAU,WAA7B,qBAOF,qBAAKA,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,QAAQC,UAAW/E,IACrC,cAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,YAAYC,UAAWjC,gBChCtCkC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpG,MAAK,YAAkD,IAA/CqG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASnD,OACP,cAAC,IAAD,CAAUnE,MAAOA,EAAjB,SACE,cAAC,GAAD,MAEFuH,SAASC,eAAe,SAM1BV,O","file":"static/js/main.d23efd09.chunk.js","sourcesContent":["export const CREATE_USER_SUCCESS = \"CREATE_USER_SUCCESS\"\nexport const CREATE_USER_FAIL = \"CREATE_USER_FAIL\"\n\nexport const LIST_USER_SUCCESS = \"LIST_USER_SUCCESS\"\nexport const LIST_USER_FAIL = \"LIST_USER_FAIL\"\n\nexport const SHOW_USER_SUCCESS = \"SHOW_USER_SUCCESS\"\nexport const SHOW_USER_FAIL = \"SHOW_USER_FAIL\"\n\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\"\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\"\n\nexport const DELETE_USER_SUCCESS = \"DELETE_USER_SUCCESS\"\nexport const DELETE_USER_FAIL = \"DELETE_USER_FAIL\"\n\nexport const DELETE_ALL_USER_SUCCESS = \"DELETE_ALL_USER_SUCCESS\"\nexport const DELETE_ALL_USER_FAIL = \"DELETE_ALL_USER_FAIL\"\n\nexport const SEARCH_USER_SUCCESS = \"SEARCH_USER_SUCCESS\"\nexport const SEARCH_USER_FAIL = \"SEARCH_USER_FAIL\"","import {\n  CREATE_USER_FAIL,\n  CREATE_USER_SUCCESS,\n  DELETE_USER_FAIL,\n  DELETE_USER_SUCCESS,\n  LIST_USER_FAIL,\n  LIST_USER_SUCCESS,\n  UPDATE_USER_FAIL,\n  UPDATE_USER_SUCCESS,\n} from \"../../actions/users/type\";\n\nconst initialState = {\n  users: [],\n  user: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LIST_USER_SUCCESS:\n      return {\n        ...state,\n        users: payload,\n      };\n    case LIST_USER_FAIL:\n      return {\n        ...state,\n      };\n    case CREATE_USER_SUCCESS:\n      console.log(payload, ...state.users);\n      return {\n        ...state,\n        users: [...state.users, payload],\n      };\n    case CREATE_USER_FAIL:\n      return {\n        ...state,\n      };\n    case DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        users: state.users.filter(({ id }) => id !== parseInt(payload)),\n      };\n    case DELETE_USER_FAIL:\n      return {\n        ...state,\n      };\n    case UPDATE_USER_SUCCESS:\n      console.log(payload, 'edit customer paylaod',)\n      return {\n        ...state,\n        users: state.users.map((user) => {\n          console.log(user.id === parseInt(payload.userID), \"dddddddddddd\");\n          if (user.id === parseInt(payload.userID)) {\n            return {\n              ...user,\n              ...payload.data,\n            };\n          } else {\n            return user;\n          }\n        }),\n      };\n    case UPDATE_USER_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","export const SET_MESSAGE = \"SET_MESSAGE\"\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\"","import { CLEAR_MESSAGE, SET_MESSAGE } from \"../../actions/message/type\"\n\nconst initialState = {}\n\nconst messageReducer = (state = initialState, action) =>  {\n    const { type, payload } = action;\n    switch (type) {\n      case SET_MESSAGE:\n        return {\n          ...state,\n          message: payload,\n        };\n      case CLEAR_MESSAGE:\n        return {\n          ...state,\n          message: \"\" ,\n        };\n      default:\n        return state;\n    }\n  };\n\nexport default messageReducer;\n","export const OPEN_MODAL = \"OPEN_MODAL\"\nexport const CLOSE_MODAL = \"CLOSE_MODAL\"\n","import { CLOSE_MODAL, OPEN_MODAL } from \"../../actions/modal/type\";\n\nconst initialState = {\n  isOpen: false\n}\n\nconst modalReducer = (state = initialState, action) =>  {\n    const { type, payload } = action;\n    switch (type) {\n      case OPEN_MODAL:\n        return {\n          ...state,\n          isOpen: payload,\n        };\n      case CLOSE_MODAL:\n        return {\n          ...state,\n          isOpen: payload,\n        };\n      default:\n        return state;\n    }\n  };\n\nexport default modalReducer;\n","// ** Redux Imports\nimport { combineReducers } from 'redux'\n\n// ** Reducers Imports\nimport user from './users'\nimport message from \"./message\"\nimport modal from \"./modal\"\n\n\nconst rootReducer = combineReducers({\n  user,\n  message,\n  modal,\n\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport { store };","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\"\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nexport default axios.create({\n  \n  baseURL: BASE_URL,\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n  withCredentials: true\n})\n","/* eslint-disable import/no-anonymous-default-export */\nimport http from \"./http-common\"\n\nconst list = () => {\n  return http\n    .get(\"data\")\n    .then((response) => {\n      console.log(response)\n      return response.data\n    })\n}\n\n\nconst create = (data) => {\n  console.log(data)\n  return http\n    .post(\"data\", data)\n    .then((response) => {\n      return response.data\n    })\n}\n\nconst deleteUser = (id) => {\n  return http\n    .delete(`data/${id}`)\n    .then((response) => {\n      console.log(response)\n      return response\n    })\n    \n}\n\nconst show = (id) => {\n  return http\n    .get(`api/customer/show/${id}`)\n    .then((response) => {\n      return response.data\n    })\n}\n\nconst update = (id, data) => {\n  console.log(data);\n  return http\n    .post(`api/customer/update/${id}`, data)\n    .then((response) => {\n      return response.data\n    })\n}\n\nconst removeAll = () => {\n  return http\n    .delete(\"api/customer/removeAll\")\n    .then((response) => {\n      console.log(response)\n      return response\n    })\n    \n}\n\nconst deleteCustomer = (id) => {\n  return http\n    .delete(`api/customer/delete/${id}`)\n    .then((response) => {\n      console.log(response)\n      return response\n    })\n    \n}\n\nconst search = (keyWord) => {\n  console.log(keyWord);\n  return http\n    .post(\"api/customer/search\", {keyWord})\n    .then((response) => {\n      console.log(response);\n      return response.data\n    })\n}\n\nexport default {\n  list,\n  create,\n  deleteUser,\n  show,\n  update,\n  removeAll,\n  search\n}\n","import { CLOSE_MODAL, OPEN_MODAL } from \"./type\"\n\nexport const openModal = () => ({\n  type: OPEN_MODAL,\n  payload: true\n})\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n  payload: false\n})","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTable } from \"react-table\";\nimport { removeUser } from \"../redux/actions/users\";\nimport { closeModal } from \"../redux/actions/modal\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\n\nconst ModalDelete = (props) => {\n  const { users } = useSelector((state) => state.user);\n  const { isOpen } = useSelector((state) => state.modal);\n  const dispatch = useDispatch();\n\n  useEffect((props) => {\n    // dispatch(listUsers());\n  }, []);\n\n\n\n\n  return (\n      <Modal\n      centered\n    isOpen={isOpen}\n  >\n    <ModalHeader toggle={function noRefCheck(){}}>\n      Delete\n    </ModalHeader>\n    <ModalBody>\n      Do you really want to delete this user ?\n    </ModalBody>\n    <ModalFooter>\n      <Button\n        color=\"danger\"\n        onClick={()=> {dispatch(removeUser(props.id));dispatch(closeModal());}}\n      >\n        Yes\n      </Button>\n      {' '}\n      <Button onClick={()=> {dispatch(closeModal());}}>\n        Cancel\n      </Button>\n    </ModalFooter>\n  </Modal>\n  );\n};\n\nexport default ModalDelete;\n","// ** UseJWT import to get config\nimport UserService from \"../../../services/users\"\nimport { SET_MESSAGE } from \"../message/type\";\nimport { CREATE_USER_FAIL, CREATE_USER_SUCCESS, DELETE_USER_FAIL, DELETE_USER_SUCCESS, LIST_USER_FAIL, LIST_USER_SUCCESS, UPDATE_USER_SUCCESS } from \"./type\";\n\nexport const listUsers = () => (dispatch) => {\n  return UserService.list().then(\n    (response) => {\n      console.log(response, 'ree');\n      dispatch({\n        type: LIST_USER_SUCCESS,\n        payload: response\n      })\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.message\n      })\n\n      return Promise.resolve()\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n\n      dispatch({\n        type: LIST_USER_FAIL\n      })\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message\n      })\n\n      return Promise.reject()\n    }\n  )\n}\n\n\nexport const createUser = (data) => (dispatch) => {\n  if(data){\n    dispatch({\n      type: CREATE_USER_SUCCESS,\n      payload: data\n    })\n    dispatch({\n      type: SET_MESSAGE,\n      payload: ''\n    })\n  }\n}\n\nexport const removeUser = (id) => (dispatch) => {\n  if(id){\n    console.log(id, 'delete');\n    dispatch({\n      type: DELETE_USER_SUCCESS,\n      payload: id\n    })\n\n    dispatch({\n      type: SET_MESSAGE,\n      payload: 'User deleted succeffuly'\n    })\n  }\n}\n\nexport const updateUser = (data, userID) => (dispatch) => {\n  console.log(data, userID);\n  if(data){\n    dispatch({\n      type: UPDATE_USER_SUCCESS,\n      payload: {data, userID}\n    })\n    dispatch({\n      type: SET_MESSAGE,\n      payload: ''\n    })\n  }\n}","import React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { removeUser } from \"../redux/actions/users\";\nimport { openModal } from \"../redux/actions/modal\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardText,\n  CardTitle,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport ModalDelete from \"../components/ModalDelete\";\n\nconst Home = (props) => {\n  const { users } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const [id, setId] = useState(null);\n\n  useEffect((props) => {\n    // dispatch(listUsers());\n  }, []);\n\n  const redirectToAddUser = ()=>{\n    props.history.push(\"/add-user\")\n  }\n  const redirectToEditUser = (id)=>{\n    props.history.push(`/add-user?id=${id}`)\n  }\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"ID\",\n        accessor: \"id\",\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Username\",\n        accessor: \"username\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"City\",\n        accessor: \"address\",\n        Cell: (props) => {\n          return <span> {props.value?.city} </span>;\n        },\n      },\n      {\n        Header: \"Edit\",\n        Cell: (props) => {\n          return (\n              <Button size=\"sm\" color=\"warning\" onClick={()=>redirectToEditUser(props.row.original.id)}>Edit</Button>\n          );\n        },\n      },\n      {\n        Header: \"Delete\",\n        Cell: (props) => {\n          return (\n              <Button size=\"sm\" color=\"danger\" onClick={()=> {dispatch(openModal()); setId(props.row.original.id)}}>Delete</Button>\n          );\n        },\n      },\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns,\n      data: users,\n    },\n    useSortBy\n    );\n\n  return (\n    <div>\n      <h3> Dashboard</h3>\n      <Card color=\"light\" style={{overflowX:'auto'}}>\n        <CardBody>\n          <CardTitle tag=\"h5\">\n            <div className=\"d-flex justify-content-between\">\n              <span>User list</span>\n              <Button color=\"primary\" onClick={redirectToAddUser}>Add new</Button>\n            </div>\n          </CardTitle>\n          <CardText>\n            <div className=\"col-md-12 list\">\n              <table\n                className=\"table table-striped table-bordered\"\n                style={{fontSize:'smaller'}}\n                {...getTableProps()}\n              >\n                <thead>\n                  {headerGroups.map((headerGroup) => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                      {headerGroup.headers.map((column) => (\n                        <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                          {column.render(\"Header\")}\n                          <span>\n                            {console.log(column)}\n                            {column.isSorted\n                              ? column.isSortedDesc\n                                ? '▼'\n                                : '▲'\n                              : ''}\n                          </span>\n                        </th>\n                      ))}\n                    </tr>\n                  ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                  {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                      <tr {...row.getRowProps()}>\n                        {row.cells.map((cell) => {\n                          return (\n                            <td {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </CardText>\n        </CardBody>\n      </Card>\n      <ModalDelete id={id} />\n    </div>\n  );\n};\n\nexport default Home;\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUser, updateUser } from '../redux/actions/users'\nimport { Button, Label, Input, Card, CardBody, CardTitle, CardText } from 'reactstrap'\nimport { Redirect } from 'react-router-dom';\n\nconst AddUser = (props) => {\n    const dispatch = useDispatch();\n    const { users } = useSelector((state) => state.user);\n    // console.log(window.location.search.split('=')[1]);\n    let userID = window.location.search.split('=')[1];\n    \n    const initialUserState = {\n        id: null,\n        name: \"\",\n        email: \"\",\n    };\n    \n    const [user, setUser] = useState(users.filter(({ id }) => id === parseInt(userID))[0]);\n    const [submitted, setSubmitted] = useState(false);\n    const { message } = useSelector(state => state.message);\n    // const { user: currentUser } = useSelector((state) => state.auth);\n\n\n    useEffect(() => {\n        setUser(users.filter(({ id }) => id === parseInt(userID))[0])\n        console.log(users.filter(({ id }) => id === parseInt(userID)));\n        // if (!currentUser) {\n        //   return <Redirect to=\"/login\" />;\n        // }    \n    \n      }, []);\n\n      \n    const validateEmail = (emailAdress) => {\n        if(emailAdress){\n            let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        return !!emailAdress.match(regexEmail);\n        }\n    };\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setUser({ ...user, [name]: value });\n    };\n\n    const saveUser = () => {\n        console.log(user);\n        const data = {\n            id: users?.length +1,\n            name: user.name,\n            email: user.email,\n        }\n        setSubmitted(true)\n        if(validateEmail(user.email) && user.email !== '' && user.name !== ''){\n\n            dispatch(updateUser(data, userID))\n            props.history.push(\"/home\")\n        }\n    };\n\n    const submitUser = () => {\n        console.log(user);\n        const data = {\n            id: users?.length +1,\n            name: user.name,\n            email: user.email,\n        }\n        setSubmitted(true)\n        if(validateEmail(user.email) && user.email !== '' && user.name !== ''){\n\n            dispatch(createUser(data))\n            props.history.push(\"/home\")\n        }\n    };\n\n    return (\n        <div>\n        <h3> Dashboard</h3>\n        {user?.email}\n        <Card color=\"light\">\n          <CardBody>\n            <CardTitle tag=\"h5\">\n                Form\n            </CardTitle>\n            <CardText>\n        <div className=\"submit-form\">\n\n                <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Name</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"title\"\n                            required\n                            value={user?.name}\n                            onChange={handleInputChange}\n                            name=\"name\"\n                        />\n                        {user?.name.length < 3 && user?.name.length !== 0 ?\n                            (<div className=\"error-input mt-2\">Please provide a valid Name ( min 3 characters )</div>) : null}\n                        {user?.name.length === 0 && submitted ?\n                            (<div className=\"error-input danger\">Name is Required</div>) : null}\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            id=\"Email\"\n                            required\n                            value={user?.email}\n                            onChange={handleInputChange}\n                            name=\"email\"\n                        />\n                        {user?.email && !validateEmail(user?.email) ?\n                            (<div className=\"error-input danger\">Please provide a valid email</div>) : null}\n                        {user?.email.length === 0 && submitted ?\n                            (<div className=\"error-input danger\">Email is Required</div>) : null}\n                    </div>\n\n                    {userID ?\n                    <button onClick={saveUser} className=\"btn btn-success\">\n                    Save\n                </button>\n                :\n                <button onClick={submitUser} className=\"btn btn-success\">\n                        Submit\n                    </button>}\n                    \n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-success\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                </div>\n        </div>\n        </CardText>\n        </CardBody>\n      </Card>\n    </div>\n    );\n};\n\nexport default AddUser;","import logo from './logo.svg';\nimport React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport './App.css';\n\nimport Home from \"./pages/Home\";\n\nimport { history } from \"./helpers/history\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport AddUser from './pages/AddUser';\nimport { listUsers } from \"./redux/actions/users\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  useEffect((props) => {\n    dispatch(listUsers());\n  }, []);\n\n\n  return (\n    <Router history={history}>\n      <Fragment>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Proexe\n          </Link>\n\n          <Link to={\"/home\"} className=\"nav-link\">\n                Home\n          </Link>\n          \n          \n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/add-user\" component={AddUser} />\n          </Switch>\n        </div>\n\n      </Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport { store } from './store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}